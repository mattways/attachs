=== NOTE: Attachment methos has been removed from migration just use a regular string from version 0.0.5

{<img src="https://codeclimate.com/badge.png" />}[https://codeclimate.com/github/mattways/rails-uploads] {<img src="https://travis-ci.org/mattways/rails-uploads.png?branch=master" alt="Build Status" />}[https://travis-ci.org/mattways/rails-uploads] {<img src="https://gemnasium.com/mattways/rails-uploads.png" alt="Dependency Status" />}[https://gemnasium.com/mattways/rails-uploads]

= Rails Uploads

Minimalistic toolkit to handle file and images uploads using ActiveRecord.

= Install

Put this line in your Gemfile:
  gem 'rails-uploads'
  
Then bundle:
  $ bundle
  
= Usage

Add the column to your table (just a string):
  create_table :models do |t|
    t.string :prop
  end

If you need a file:
  class Model < ActiveRecord::Base
    attr_accessible :prop
    attached_file :prop
  end

If you need a image:
  class Model < ActiveRecord::Base
    attr_accessible :prop
    attached_image :prop, :presets => { :big => { :method => :fit, :width => 1024, :height => 768 }, :small => { :method => :fill, :width => 120, :height => :120 } }
  end

(Fill will scale the image to fill all the space and then crop and fit will scale the image until it fit in the space without cropping)
  
You can use proc, will receive an ImageMagick object wrapper, with it you can do whatever you want using convert method:
  class Model < ActiveRecord::Base
    attr_accessible :prop
    attached_image :prop, :presets => { :big => proc { |image| image.convert :resize => '100x100' } }
  end

The validation works very similar to paperclip:
  class Model < ActiveRecord::Base
    attr_accessible :prop
    attached_file :prop
    validates :prop, :attachment_presence => true, :attachment_size => { :in => 0..4.megabytes }, :attachment_content_type => { :in => ['jpg'] }
  end

If you want to translate the errores the keys are:
  errors.messages.attachment_presence
  errors.messages.attachment_size_in (:begin, :end)
  errors.messages.attachment_size_less_than (:limit)
  errors.messages.attachment_size_greater_than (:limit)
  errors.messages.attachment_content_type (:types)

In your views:
  a{ :href => record.file.path } # To get the file
  a{ :href => record.image.path } # To get the original image
  a{ :href => record.image.path(:big) } # To get the thumb

In your forms:
  = f.file_field :prop

