{<img src="https://badge.fury.io/rb/attachs.png" alt="Gem Version" />}[http://badge.fury.io/rb/attachs] {<img src="https://codeclimate.com/github/museways/attachs.png" />}[https://codeclimate.com/github/museways/attachs] {<img src="https://travis-ci.org/museways/attachs.png?branch=master" alt="Build Status" />}[https://travis-ci.org/museways/attachs]

= Attachs

Minimalistic toolkit to attach files to records.

= Install

Put this line in your Gemfile:
  gem 'attachs'

Then bundle:
  $ bundle

ImageMagick is needed:
  brew install imagemagick

= Configuration

Generate the configuration file:
  rails g attachs:install

NOTE: This will generate the config/initializers/attachs.rb.

= Usage

Add the column to your table:
  create_table :users do |t|
    t.attachment :avatar
  end

Define the attachment in your model:
  class User < ActiveRecord::Base
    has_attached_file :avatar
  end

= Paths

The default path is set in the configuration file:
  Attachs.configure do |config|
    config.path = '/:timestamp-:filename'
  end

To create custom interpolations:
  Attachs.configure do |config|
    config.interpolations = {
      category: -> (attachment) { attachment.record.category }
    }
  end

The system interpolations are:

*filename*: full filename

*basename*: filename without extension

*extension*: filename extension

*size*: size of the file

*timestamp*: numeric unique id

*uuid*: unique id

*class*: record class name

*id*: id of the record

*param*: param of the record

*style*: style name

= Styles

Define the styles of the attachment:
  Attachs.configure do |config|
    config.styles = {
      small: '120x120!',
      medium: '240x240#',
      big: '360x360'
    }
  end

The possible strategies are:

*default*: resizes to contain the imagen in the desire space

*!*: forces the exact size

*#*: resizes and crops to fill the desire space

Then reference them in your model:
  class User < ActiveRecord::Base
    has_attached_file :avatar, styles: [:small, :medium]
  end

To set styles for all attachments:
  Attachs.configure do |config|
    config.global_styles = [:big]
  end

= Security

If you want the attachment to be private:
  class User < ActiveRecord::Base
    has_attached_file :avatar, private: true
  end

NOTE: This attachment will be saved into /private folder.

= Validations

To validate the presence of the attachment:
  class User < ActiveRecord::Base
    has_attached_file :avatar
    validates_attachment_presence_of :avatar
  end

To validate the size of the attachment:
  class User < ActiveRecord::Base
    has_attached_file :avatar
    validates_attachment_size_of :avatar, in: 1..5.megabytes
  end

To validate the content type of the attachment:
  class User < ActiveRecord::Base
    has_attached_file :avatar
    validates_attachment_content_type_of :avatar, in: %w(image/jpg image/gif)
  end

NOTE: You can combine them if you want. 

= I18n

If you want to translate the messages the keys are:
  errors.messages.attachment_presence
  errors.messages.attachment_size_in
  errors.messages.attachment_size_less_than
  errors.messages.attachment_size_greater_than
  errors.messages.attachment_content_type

NOTE: You may want to look into lib/attachs/locales yamls.

= Forms

Your forms continue to work the same:
  <%= form_for @user do |f| %>
    <%= f.file_field :avatar %>
  <% end %>

= Urls

The url method points to the original file:
  <%= image_tag user.avatar.url %>

If you want to point to some particular style:
  <%= image_tag user.avatar.url(:small) %>

= Credits

This gem is maintained and funded by museways[http://museways.com].

= License

It is free software, and may be redistributed under the terms specified in the MIT-LICENSE file.
